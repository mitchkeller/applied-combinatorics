<section xml:id="s_networkflow_example">
<title>A Concrete Example</title>


<introduction>
<p>
Let's apply the Labeling Algorithm to the network flow shown in
<xref ref="fig_networkflow_netflow" autoname="yes" />. Then we start with the source:
</p>
<me>
  S:\quad(*,+,\infty)
</me>
<p>
Since the source <m>S</m> is the first vertex labeled, it is also the first
one scanned. So we look at the neighbors of <m>S</m> using the
pseudo-alphabetic order on the vertices. Thus, the first one to be
considered is vertex <m>B</m> and since the edge <m>(S,B)</m> is not full, we
label <m>B</m> as
</p>
<me>
  B:\quad(S,+,8).
</me>
<p>
We then consider vertex <m>E</m> and label it as
</p>
<me>
  E:\quad(S,+,28).
</me>
<p>
Next is vertex <m>F</m>, which is labeled as
</p>
<me>
  F:\quad(S,+,15).
</me>
<p>
At this point, the scan from <m>S</m> is complete.
</p>

<p>
The first vertex after <m>S</m> to be labeled was <m>B</m>, so we now scan from
<m>B</m>. The (unlabeled) neighbors of <m>B</m> to be considered, in order, are
<m>A</m>, <m>C</m>, and<nbsp /><m>D</m>. This results in the following labels:
</p>
<md>
  <mrow>  \amp A:\quad(B,+,8)</mrow>
  <mrow>  \amp C:\quad(B,+,8)</mrow>
  <mrow>  \amp D:\quad(B,-,6)</mrow>
</md>
<p>
The next vertex to be scanned is <m>E</m>, but <m>E</m> has no unlabeled
neighbors, so we then move on to <m>F</m>, which again has no unlabeled
neighbors. Finally, we scan from <m>A</m>, and using the pseudo-alphabetic
order, we first consider the sink <m>T</m> (which in this case is the only
remaining unlabeled vertex). This results in the following label for
<m>T</m>.
</p>
<me>
  T:\quad(A,+,8)
</me>
<p>
Now that the sink is labeled, we know there is an augmenting path. We
discover this path by backtracking. The sink <m>T</m> got its label from
<m>A</m>, <m>A</m> got its label from <m>B</m>, and <m>B</m> got its label from <m>S</m>.
Therefore, the augmenting path is <m>P=(S,B,A,T)</m> with <m>\delta=8</m>. All
edges on this path are forward. The flow is then updated by
increasing the flow on the edges of <m>P</m> by <m>8</m>. This results in the
flow shown in <xref ref="fig_networkflow_updated-flow" autoname="yes" />. The value of
this flow is <m>38</m>.
</p>
<figure xml:id="fig_networkflow_updated-flow" >
<caption>An Updated Network Flow</caption>
<image width="46%" source="images/webfig-31c.png" /> <br />
</figure>
<p>
Here is the sequence of labels that will be found when the labeling
algorithm is applied to this updated flow (Note that in the scan from
<m>S</m>, the vertex <m>B</m> will not be labeled, since now the edge
<m>(S,B)</m> is full.
</p>
<md>
  <mrow>  \amp S:\quad(*,+,\infty)</mrow>
  <mrow>  \amp E:\quad(S,+,28)</mrow>
  <mrow>  \amp F:\quad(S,+,15)</mrow>
  <mrow>  \amp B:\quad(E,+,19)</mrow>
  <mrow>  \amp D:\quad(E,+,12)</mrow>
  <mrow>  \amp A:\quad(F,+,12)</mrow>
  <mrow>  \amp C:\quad(B,+,10)</mrow>
  <mrow>  \amp T:\quad(A,+,12)</mrow>
</md>
<p>
This labeling results in the augmenting path <m>P=(S,F,A,T)</m> with
<m>\delta=12</m>.
</p>

<p>
After this update, the value of the flow has been increased and
is now <m>50=38+12</m>.
We start the labeling process over again and
repeat until we reach a stage where some vertices
(including the source) are labeled and some vertices (including
the sink) are unlabeled.
</p>
</introduction>


<subsection>
<title>How the Labeling Algorithm Halts</title>
<p>
Consider the network flow in <xref ref="fig_networkflow_flow4" autoname="yes" />.
</p>
<figure xml:id="fig_networkflow_flow4" >
<caption>Another Network Flow</caption>
<image width="56%" source="images/network_flow4.png" /> <br />
</figure>
<p>
The value of the current flow is <m>172</m>. Applying the labeling
algorithm using the pseudo-alphabetic order results in the following
labels:
</p>
<md>
  <mrow>  \amp S:\quad(*,+,\infty)</mrow>
  <mrow>  \amp C:\quad(S,+,8)</mrow>
  <mrow>  \amp F:\quad(S,+,23)</mrow>
  <mrow>  \amp H:\quad(C,+,7)</mrow>
  <mrow>  \amp I:\quad(H,+,7)</mrow>
  <mrow>  \amp E:\quad(I,-,3)</mrow>
  <mrow>  \amp G:\quad(E,-,3)</mrow>
  <mrow>  \amp L:\quad(E,+,3)</mrow>
  <mrow>  \amp B:\quad(G,+,3)</mrow>
  <mrow>  \amp T:\quad(L,+,3)</mrow>
</md>
<p>
These labels result in the augmenting path <m>P=(S,C,H,I,E,L,T)</m> with
<m>\delta =3</m>. After updating the flow and increasing its value to
<m>175</m>, the labeling algorithm halts with the following labels:
</p>
<md>
  <mrow>  \amp S:\quad(*,+,\infty)</mrow>
  <mrow>  \amp C:\quad(S,+,5)</mrow>
  <mrow>  \amp F:\quad(S,+,23)</mrow>
  <mrow>  \amp H:\quad(C,+,4)</mrow>
  <mrow>  \amp I:\quad(H,+,4)</mrow>
</md>
<p>
Now we observe that the labeled and unlabeled vertices are
<m>L=\{S,C,F,H,I\}</m> and <m>U=\{T,A,B,D,E,G,J,K\}</m>. Furthermore, the
capacity of the cut <m>V=L\cup U</m> is
</p>
<me>
  41+8+23+8+13+29+28+25 = 175.
</me>
<p>
This shows that we have found a cut whose capacity is exactly equal to
the value of the current flow. In turn, this shows that the flow is
optimal.
</p>
</subsection>

</section>
