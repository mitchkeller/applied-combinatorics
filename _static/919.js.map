{"version":3,"file":"919.js","mappings":"0JAkBe,MAAMA,UAAuB,IACxC,WAAAC,CAAYC,GACRC,MAAMD,GAEN,IAAIE,GADJF,EAAOA,GAAQ,CAAC,GACAE,KAChBC,KAAKC,SAAWF,EAChBC,KAAKE,qBAAuBL,EAAKK,qBACjCF,KAAKG,iBAAkB,EACvBH,KAAKI,MAAQL,EAAKM,IAC+B,IAA7CC,EAAEN,KAAKC,UAAUM,KAAK,qBACtBP,KAAKG,iBAAkB,GAE3BH,KAAKQ,SAAWR,KAAKC,SAASQ,WAC9BT,KAAKU,QAAS,EACVJ,EAAEN,KAAKC,UAAUU,GAAG,mBACpBX,KAAKU,QAAS,GAElBV,KAAKY,QAAU,KACfZ,KAAKa,WAAa,GAClBb,KAAKc,YAAc,GACnBd,KAAKe,iBAAmB,GACxBf,KAAKgB,aAAe,GACpBhB,KAAKiB,SAAW,KAChBjB,KAAKkB,QAAU,kBACflB,KAAKmB,cACLnB,KAAKoB,eACLpB,KAAKqB,gBACLrB,KAAKsB,oBACLtB,KAAKuB,eACLvB,KAAKwB,WAAW,aAChBxB,KAAKyB,YAAY,WAAW,GAI5BzB,KAAK0B,aAAa1B,KAAK2B,cACF,oBAAVC,OACPA,MAAMC,kBAAkB7B,KAAK2B,aAErC,CAMA,YAAAP,GAII,MAAMU,EAAc9B,KAAKC,SAAS8B,cAAcC,cAAc,uBAC9D,GAAIF,EACA9B,KAAKiB,SAAWa,MACb,CAGH,IADA,IAAIG,EACKC,EAAI,EAAGA,EAAIlC,KAAKC,SAASQ,WAAW0B,OAAQD,IACjD,GAA6C,OAAzClC,KAAKC,SAASQ,WAAWyB,GAAGE,SAAmB,CAC/CH,EAAYjC,KAAKC,SAASQ,WAAWyB,GAAGG,UACxC,KACJ,CAEJ,IACIC,EADWhC,EAAEN,KAAKC,UAAUsC,OACZC,MAAMP,GAC1BjC,KAAKiB,SAAWqB,EAAK,EACzB,CACJ,CAEA,WAAAnB,GAII,IADA,IAAIsB,EAAkB,GACbP,EAAI,EAAGA,EAAIlC,KAAKQ,SAAS2B,OAAQD,IAClC5B,EAAEN,KAAKQ,SAAS0B,IAAIvB,GAAG,4BACvB8B,EAAgBC,KAAK1C,KAAKQ,SAAS0B,IAG3C,IAAK,IAAIS,EAAI,EAAGA,EAAIF,EAAgBN,OAAQQ,IAAK,CAC7C,IAAIC,EAAYtC,EAAEmC,EAAgBE,IAAIE,KAAK,MACvCC,GAAa,EACbxC,EAAEmC,EAAgBE,IAAIhC,GAAG,oBAEzBmC,GAAa,GAEjB,IACIC,EAAgB,CAChB1C,GAAIuC,EACJhC,QAASkC,EACTE,QAJc1C,EAAEmC,EAAgBE,IAAIJ,QAMxCvC,KAAKa,WAAW6B,KAAKK,EACzB,CACJ,CAEA,aAAA1B,GACI,IAAK,IAAIa,EAAI,EAAGA,EAAIlC,KAAKQ,SAAS2B,OAAQD,IAClC5B,EAAEN,KAAKQ,SAAS0B,IAAIvB,GAAG,8BACvBX,KAAKgB,aAAa0B,KAAK1C,KAAKQ,SAAS0B,GAAGe,UAGpD,CAEA,iBAAA3B,GAGI,IAAK,IAAIY,EAAI,EAAGA,EAAIlC,KAAKa,WAAWsB,OAAQD,IACpClC,KAAKa,WAAWqB,GAAGtB,UACnBZ,KAAKc,YAAY4B,KAAK1C,KAAKa,WAAWqB,GAAG7B,IACzCL,KAAKe,iBAAiB2B,KAAKR,GAGvC,CAKA,YAAAX,GACIvB,KAAKkD,oBACLlD,KAAKmD,eACLnD,KAAKoD,sBAEL9C,EAAEN,KAAKC,UAAUoD,YAAYrD,KAAK2B,aACtC,CAEA,iBAAAuB,GACIlD,KAAK2B,aAAe2B,SAASC,cAAc,OAC3CvD,KAAKwD,YAAcF,SAASC,cAAc,OAC1CjD,EAAEN,KAAKwD,aAAajB,KAAKvC,KAAKiB,UAC9BjB,KAAKwD,YAAYnD,GAAKL,KAAKI,MAAQ,UACnCJ,KAAK2B,aAAa8B,YAAYzD,KAAKwD,aACnClD,EAAEN,KAAK2B,cAAc+B,SAAS1D,KAAKC,SAAS0D,aAAa,UACzD3D,KAAK2B,aAAatB,GAAKL,KAAKI,KAChC,CAEA,YAAA+C,GACInD,KAAK4D,SAAWN,SAASC,cAAc,QACvCvD,KAAK4D,SAASvD,GAAKL,KAAKI,MAAQ,QAChCE,EAAEN,KAAK4D,UAAUf,KAAK,CAClBgB,OAAQ,MACRC,OAAQ,GACRC,SAAU,kBAGd/D,KAAKgE,aAAeV,SAASC,cAAc,YAC3CvD,KAAKgE,aAAaC,aAAa,OAAQ,cACvCjE,KAAKgE,aAAaC,aAAa,kBAAmBjE,KAAKI,MAAQ,WAC/DJ,KAAK4D,SAASH,YAAYzD,KAAKgE,cAE/BhE,KAAKkE,mBACLlE,KAAKmE,sBAEL,IAAIC,EAASd,SAASC,cAAc,UAChCvD,KAAKG,gBACLiE,EAAOC,YAAc,wBAErBD,EAAOC,YAAc,aAEzBrE,KAAKgE,aAAaP,YAAYW,GAC9BpE,KAAK2B,aAAa8B,YAAYzD,KAAK4D,SACvC,CAEA,gBAAAM,GAEIlE,KAAKsE,YAAc,GACnB,IAAIC,EAAa,QACbvE,KAAKG,kBACLoE,EAAa,YAIjBvE,KAAKwE,WAAa,GAClB,IAAK,IAAItC,EAAI,EAAGA,EAAIlC,KAAKa,WAAWsB,OAAQD,IACxClC,KAAKwE,WAAW9B,KAAKR,GAErBlC,KAAKU,QACLV,KAAKyE,mBAET,IAAIC,EAAO1E,KACP2E,EAAa,WACbD,EAAKE,YAAa,CACtB,EACA,IAAK,IAAIjC,EAAI,EAAGA,EAAI3C,KAAKa,WAAWsB,OAAQQ,IAAK,CAC7C,IAAIkC,EAAI7E,KAAKwE,WAAW7B,GACpBmC,EAAQ9E,KAAKI,MAAQ,QAAUyE,EAE/BE,EAAQzB,SAASC,cAAc,SAE/BP,EAAUhD,KAAKa,WAAWgE,GAAG7B,QAC7BgC,EAAS,GACThC,EAAQiC,WAAW,SACnBD,EAAS,MACThC,EAAUA,EAAQkC,MAAM,IAE5B5E,EAAEyE,GAAOxC,KACL,GAAGyC,iBAAsBT,0BAAmCM,QAAQC,KAASK,OAAOC,aAChF,IAAIC,WAAW,GAAK1C,OAClBK,KAGV,IAAIsC,EAAS,CACTC,MAAOjF,EAAEyE,GAAOS,KAAK,SAAS,GAC9BT,MAAOA,GAEXO,EAAOC,MAAME,QAAUd,EAEvB3E,KAAKsE,YAAY5B,KAAK4C,GAEtBtF,KAAKgE,aAAaP,YAAYsB,GAC9B/E,KAAKgE,aAAaP,YAAYH,SAASC,cAAc,MACzD,CACJ,CAEA,mBAAAY,GAGInE,KAAK0F,aAAepC,SAASC,cAAc,UAC3CvD,KAAK0F,aAAarB,YAAc,WAChC/D,EAAEN,KAAK0F,cAAc7C,KAAK,CACtB8C,MAAO,kBACPC,KAAM,YACNC,KAAM,WAEN7F,KAAKG,gBACLH,KAAK0F,aAAaI,iBACd,QACA,WACI9F,KAAK+F,uBAAsB,EAC/B,EAAEC,KAAKhG,OACP,GAGJA,KAAK0F,aAAaI,iBACd,QACA,SAAUG,GACNA,EAAGC,iBACHlG,KAAKmG,uBAAsB,EAC/B,EAAEH,KAAKhG,OACP,GAGRA,KAAK4D,SAASH,YAAYzD,KAAK0F,cAE3B1F,KAAKE,uBAAyBkG,YAAYC,OAC1CrG,KAAKsG,cAAgBhD,SAASC,cAAc,UAC5CjD,EAAEN,KAAKsG,eAAezD,KAAK,CACvB8C,MAAO,kBACPtF,GAAIL,KAAKI,MAAQ,SACjBmG,SAAU,GACVX,KAAM,YAEV5F,KAAKsG,cAAcjC,YAAc,aACjCrE,KAAKsG,cAAcR,iBACf,QACA,WACI9F,KAAKwG,eAAexG,KAAKI,MAC7B,EAAE4F,KAAKhG,OACP,GAEJA,KAAK4D,SAASH,YAAYzD,KAAKsG,eAEvC,CAEA,mBAAAlD,GACIpD,KAAKyG,YAAcnD,SAASC,cAAc,OAC1CvD,KAAKyG,YAAYpG,GAAKL,KAAKI,MAAQ,YACnCJ,KAAKyG,YAAYxC,aAAa,YAAa,UAC3CjE,KAAKyG,YAAYxC,aAAa,OAAQ,UACtCjE,KAAK2B,aAAa8B,YAAYH,SAASC,cAAc,OACrDvD,KAAK2B,aAAa8B,YAAYzD,KAAKyG,YACvC,CAEA,gBAAAhC,GAMI,IAJA,IACIiC,EACAC,EAFAC,EAAe5G,KAAKwE,WAAWrC,OAIX,IAAjByE,GAAoB,CAEvBD,EAAcE,KAAKC,MAAMD,KAAKnG,SAAWkG,GACzCA,GAAgB,EAEhBF,EAAiB1G,KAAKwE,WAAWoC,GACjC5G,KAAKwE,WAAWoC,GAAgB5G,KAAKwE,WAAWmC,GAChD3G,KAAKwE,WAAWmC,GAAeD,EAC/B,IAAIK,EAAoB/G,KAAKgB,aAAa4F,GAC1C5G,KAAKgB,aAAa4F,GAAgB5G,KAAKgB,aAAa2F,GACpD3G,KAAKgB,aAAa2F,GAAeI,CACrC,CACJ,CAKA,cAAAC,CAAezG,GAGNA,EAAK0G,SACN1G,EAAK0G,OAAS,IAGlB,IADA,IAAIC,EAAU3G,EAAK0G,OAAOzE,MAAM,KACvB2E,EAAI,EAAGA,EAAID,EAAQ/E,OAAQgF,IAEhC,IADA,IAAIC,EAAQF,EAAQC,GACXE,EAAI,EAAGA,EAAIrH,KAAKsE,YAAYnC,OAAQkF,IACrCrH,KAAKsE,YAAY+C,GAAG9B,MAAM+B,OAASF,GACnC9G,EAAEN,KAAKsE,YAAY+C,GAAG9B,OAAO1C,KAAK,UAAW,QAIrD7C,KAAKG,gBACLH,KAAK+F,uBAAsB,GAE3B/F,KAAKmG,uBAAsB,EAEnC,CAEA,iBAAAoB,GAGI,IACIL,EACJ,IAAIlH,KAAKwH,cAGCC,aAAatF,OACb,EAAG,CACT,IAAIuF,EAAKD,aAAaE,QAAQ3H,KAAK4H,mBACnC,GAAW,OAAPF,EAAa,CACb,IAEIR,EADaW,KAAKC,MAAMJ,GACHT,OAAOzE,MAAM,IACtC,CAAE,MAAOuF,GAIL,OAFAC,QAAQC,IAAIF,EAAIG,cAChBT,aAAaU,WAAWnI,KAAK4H,kBAEjC,CACA,IAAK,IAAIT,EAAI,EAAGA,EAAID,EAAQ/E,OAAQgF,IAEhC,IADA,IAAIC,EAAQF,EAAQC,GACXE,EAAI,EAAGA,EAAIrH,KAAKsE,YAAYnC,OAAQkF,IACrCrH,KAAKsE,YAAY+C,GAAG9B,MAAM+B,OAASF,GACnC9G,EAAEN,KAAKsE,YAAY+C,GAAG9B,OAAO1C,KACzB,UACA,QAKZ7C,KAAKE,uBACLF,KAAKoI,qBACLpI,KAAKqI,mBACDrI,KAAKG,gBACLH,KAAKsI,oBAELtI,KAAKuI,oBAGjB,CACJ,CACJ,CAEA,eAAAC,CAAgBjI,GACZ,IAAIkI,EAAY,IAAIC,KAChBC,EAAa,CACb1B,OAAQ1G,EAAK0G,OACb2B,UAAWH,EACX7H,QAASL,EAAKK,SAElB6G,aAAaoB,QACT7I,KAAK4H,kBACLC,KAAKiB,UAAUH,GAEvB,CAKA,qBAAA5C,CAAsBgD,GAElB/I,KAAKqI,mBACLrI,KAAKgJ,sBACLhJ,KAAKwI,gBAAgB,CACjB5H,QAASZ,KAAKY,QAAU,IAAM,IAC9BqG,OAAQjH,KAAKiJ,WAAWC,KAAK,OAE7BH,GACA/I,KAAKsI,qBAEJlC,YAAYC,MAAQD,YAAY+C,cACjCnJ,KAAKoJ,qBACDpJ,KAAKE,sBACLF,KAAKoI,sBAILhC,YAAYC,MACa,UAAzBD,YAAYiD,UACgB,oBAArBC,kBACPA,iBAAmB,EACnBtJ,KAAKoJ,sBAEL9I,EAAEN,KAAKyG,aAAalE,KAAK,wCACzBjC,EAAEN,KAAKyG,aAAa5D,KAAK,QAAS,oBAG9C,CAEA,gBAAAwF,GACI,IAAIkB,EACJvJ,KAAKwJ,eAAiB,GACtBxJ,KAAKyJ,eAAiB,GACtBzJ,KAAKiJ,WAAa,GAClBjJ,KAAK0J,SAAW,GAEhB,IADA,IAAIC,EAAa3J,KAAK4D,SAASgG,SAASC,OAC/B3H,EAAI,EAAGA,EAAIyH,EAAWxH,OAAQD,IAC/ByH,EAAWzH,GAAG4H,UACdP,EAAQI,EAAWzH,GAAGoF,MACtBtH,KAAKiJ,WAAWvG,KAAK6G,GACrBvJ,KAAKyJ,gBAAkB,cAAcvH,EAAI,MAAMlC,KAAKgB,aAAakB,UAEjElC,KAAK0J,UAAYH,EAAQ,IACzBvJ,KAAKwJ,eAAiBxJ,KAAKgB,aAAakB,IAGhDlC,KAAKiJ,WAAWc,MACpB,CAEA,kBAAAC,GACIhK,KAAKqI,mBACDrI,KAAKG,gBACLH,KAAKgJ,sBAELhJ,KAAKiK,qBAEb,CAEA,sBAAMC,CAAiBC,GACfnK,KAAKG,sBACCH,KAAKsI,kBAAkB6B,SAEvBnK,KAAKuI,kBAAkB4B,EAErC,CAEA,cAAAC,GACQpK,KAAKG,gBACLH,KAAKoJ,qBAELpJ,KAAKqK,qBAETrK,KAAK0B,aAAa1B,KAAKyG,YAC3B,CACA,mBAAAuC,GACIhJ,KAAKsK,aAAe,EAGpB,IAFA,IAAIC,EAAe,EACfC,EAAa,EAEbD,EAAevK,KAAKe,iBAAiBoB,QACrCqI,EAAaxK,KAAKiJ,WAAW9G,QAGzBnC,KAAKiJ,WAAWuB,GAChBxK,KAAKe,iBAAiBwJ,GAEtBC,IAEAxK,KAAKiJ,WAAWuB,IAChBxK,KAAKe,iBAAiBwJ,IAEtBvK,KAAKsK,eACLE,IACAD,KAEAA,IAGR,IAAIE,EAAWzK,KAAKiJ,WAAW9G,OAC3BuI,EAAa1K,KAAKsK,aAClBK,EAAY3K,KAAKc,YAAYqB,OACjCnC,KAAKiH,OAASjH,KAAKiJ,WAAWC,KAAK,KACnClJ,KAAKY,QAAU8J,IAAeC,GAAaA,IAAcF,EAErDzK,KAAK4K,QADLH,IAAaE,EACED,EAAaC,EAEbD,EAAa7D,KAAKgE,IAAIJ,EAAUE,EAEvD,CAEA,uBAAMrC,CAAkB6B,GACpB,IAAIlD,EAASjH,KAAKiH,QAAU,GACxBrG,EAAUZ,KAAKY,UAAW,EAG9B,IAAIL,EAAO,CACPuK,MAAO,UACPC,IAHA,UAAY9D,EAAS,KAAkB,GAAXrG,EAAkB,UAAY,MAI1DqG,OAAQA,EACRrG,QAASA,EACToK,OAAQhL,KAAKI,OAEbgG,YAAYC,MAAoC,oBAArBiD,mBAC3B/I,EAAKwK,IAAMxK,EAAKwK,IAAM,QAAQzB,yBAEf,IAARa,IACP5J,EAAK4J,IAAMA,SAETnK,KAAKiL,aAAa1K,EAC5B,CAEA,kBAAA6I,GACI,IAAI8B,EAAY,UACZT,EAAWzK,KAAKiJ,WAAW9G,OACd,IAAbsI,IACAS,EAAY,UAEhB,IAAIR,EAAa1K,KAAKsK,aAClBK,EAAY3K,KAAKc,YAAYqB,OAC7BgJ,EAAenL,KAAKyJ,eACpBzJ,KAAKY,SACLN,EAAEN,KAAKyG,aAAalE,KAAK,mBAAmB4I,UAC5C7K,EAAEN,KAAKyG,aAAa5D,KAAK,QAAS,sBAElCvC,EAAEN,KAAKyG,aAAalE,KAChB,eAAekI,KAAYS,aAAqBR,gBAAyBC,yBAAiCQ,UAE9G7K,EAAEN,KAAKyG,aAAa5D,KAAK,QAAS,sBAE1C,CAEA,qBAAAsD,CAAsB4C,GAElB/I,KAAKqI,mBACLrI,KAAKiK,sBACLjK,KAAKwI,gBAAgB,CACjB5H,QAASZ,KAAKY,QAAU,IAAM,IAC9BqG,OAAQjH,KAAKiJ,WAAWC,KAAK,OAE7BH,GACA/I,KAAKuI,qBAEJnC,YAAYC,MAAQD,YAAY+C,cACjCnJ,KAAKqK,qBACDrK,KAAKE,sBACLF,KAAKoI,sBAGLhC,YAAYC,MACa,UAAzBD,YAAYiD,UACgB,oBAArBC,kBACPA,iBAAmB,EACnBtJ,KAAKoJ,sBAEL9I,EAAEN,KAAKyG,aAAalE,KAAK,wCACzBjC,EAAEN,KAAKyG,aAAa5D,KAAK,QAAS,oBAG9C,CAEA,mBAAAoH,GACIjK,KAAKiH,OAASjH,KAAKiJ,WAAW,GAC1BjJ,KAAKiJ,WAAW,IAAMjJ,KAAKe,iBAAiB,IAC5Cf,KAAKY,SAAU,EACfZ,KAAK4K,QAAU,GACc,MAAtB5K,KAAKiJ,WAAW,KAEvBjJ,KAAKY,SAAU,EACfZ,KAAK4K,QAAU,EAEvB,CAEA,uBAAMrC,CAAkB4B,GAEpB,IAAIlD,EAASjH,KAAKiJ,WAAW,IAAM,GAC/BrI,EACAZ,KAAKiJ,WAAW,IAAMjJ,KAAKe,iBAAiB,GAAK,IAAM,IAG3D,IAAIR,EAAO,CACPuK,MAAO,UACPC,IAHA,UAAY9D,EAAS,KAAkB,KAAXrG,EAAiB,UAAY,MAIzDqG,OAAQA,EACRrG,QAASA,EACToK,OAAQhL,KAAKI,OAEbgG,YAAYC,MAAoC,oBAArBiD,mBAC3B/I,EAAKwK,IAAMxK,EAAKwK,IAAM,QAAQzB,yBAEf,IAARa,IACP5J,EAAK4J,IAAMA,SAETnK,KAAKiL,aAAa1K,EAC5B,CAEA,kBAAA8J,GACI,IAAIzJ,EAAUZ,KAAKiJ,WAAW,IAAMjJ,KAAKe,iBAAiB,GACtDoK,EAAenL,KAAKwJ,eAEpB5I,GACAN,EAAEN,KAAKyG,aAAalE,KAAK,MAAQ4I,GACjC7K,EAAEN,KAAKyG,aAAa5D,KAAK,QAAS,sBAEd,MAAhBsI,IACAA,EAAe,IAEnB7K,EAAEN,KAAKyG,aAAalE,KAAK,MAAQ4I,GACjC7K,EAAEN,KAAKyG,aAAa5D,KAAK,QAAS,sBAE1C,CACA,kBAAAuF,GACQhC,YAAYgF,kBACZpL,KAAKsG,cAAcC,UAAW,EAEtC,CACA,sBAAA8E,CAAuB9K,GAInB,IAAI+K,EAAM,qDACV,IAAK,IAAIpJ,KAAK3B,EACV+K,GACI,WACA/K,EAAK2B,GAAG,GACR,YACA3B,EAAK2B,GAAG,GACR,aAGR,OADAoJ,EAAO,UAEX,CACA,YAAAC,CAAahL,EAAMiL,EAAQC,GACvB,IAAIC,EAAWnL,EAAKoL,OAChBzE,EAAUwE,EAASE,WACnBC,EAAOH,EAASG,KAChBC,EAAKC,OAAOC,KAAK9E,GAAS6C,OAC1BkC,EAAO,UACXA,GAAQ,2CACR,IAAIC,EAAW,GACf,IAAK,IAAIrH,KAAKiH,EAAI,CAEVI,EADAJ,EAAGjH,KAAOgH,EAAKjL,QACJ,UAEA,OAEfqL,GACI,WAAaH,EAAGjH,GAAK,wCACzB,IAAIsH,EAAMjF,EAAQ4E,EAAGjH,IAAM,IAC3BoH,GAAQ,yBACRA,GACI,6CACAC,EACA,kBACAC,EACA,MACAA,EACJF,GAAQ,aACRA,GAAQ,kBACZ,CACAA,GAAQ,WACa,gBAAjBJ,EAAKO,UACLH,GACI,qBACAJ,EAAKO,QACL,wCAEiBC,IAArBX,EAASY,UACTL,GAAQjM,KAAKqL,uBAAuBK,EAASY,UAgBxChM,EAbL,sXAQA2L,EARA,oDAcDM,OACP,CAEA,cAAA/F,GACI,IAAIjG,EAAO,CAAC,EACZA,EAAKyK,OAAShL,KAAKI,MACnBG,EAAKiM,YAAcpG,YAAYqG,OAC/BC,OAAOC,IACH,GAAGvG,YAAYwG,mDACfrM,EACAP,KAAKuL,aAAavF,KAAKhG,MAE/B,CAEA,kBAAA6M,GACI,IAAK,IAAI3K,EAAI,EAAGA,EAAIlC,KAAKsE,YAAYnC,OAAQD,IACzClC,KAAKsE,YAAYpC,GAAGqD,MAAMgB,UAAW,CAE7C,CAEA,iBAAAuG,GACI,IAAK,IAAI5K,EAAI,EAAGA,EAAIlC,KAAKsE,YAAYnC,OAAQD,IACzClC,KAAKsE,YAAYpC,GAAGqD,MAAMgB,UAAW,CAE7C,EAOJjG,EAAEgD,UAAUyJ,GAAG,4BAA4B,WACvCzM,EAAE,mCAAmC0M,MAAK,SAAU5F,GAEhD,IAAIvH,EAAO,CACPE,KAAMC,KACNE,qBAAsBkG,YAAYlG,sBAE4B,GAA9DI,EAAEN,MAAMiN,QAAQ,oCAAoC9K,SAEpD+K,OAAOC,aAAanN,KAAKK,IAAM,IAAIV,EAAeE,GAE1D,GACJ,ICnuBe,MAAMuN,UAAgBzN,EACjC,WAAAC,CAAYC,GACRC,MAAMD,GACNS,EAAEN,KAAK2B,cAAc+B,SAAS,aAC9B1D,KAAKqN,uBAAwB,EAC7BrN,KAAKsN,gBAAgBtN,KAAKuN,aAC1BvN,KAAKwN,aACT,CAEA,eAAAF,CAAgBG,GAGZ,IAAIC,EAAcpK,SAASC,cAAc,OACrCoK,EAAWrK,SAASC,cAAc,OACtCjD,EAAEqN,GAAU9K,KAAK,CACb+K,IAAK,uBACLC,MAAO,2BAEXH,EAAYI,UAAY,UACxBJ,EAAYK,MAAQ,GACpBL,EAAYjK,YAAYkK,GACxBrN,EAAEmN,GAAWO,QAAQN,EACzB,CACA,WAAAF,GAGIlN,EAAEN,KAAK0F,cAAc7C,KAAK,WAAY,QACtCvC,EAAEN,KAAK0F,cAAcuI,OACrB3N,EAAEN,KAAKsG,eAAe2H,MAC1B,CAIA,kBAAA7E,GACIpJ,KAAKkO,iBACT,CACA,kBAAA7D,CAAmBoB,EAAU0C,GACzBnO,KAAKkO,iBACT,CACA,eAAAA,GACI,IAAK,IAAIhM,EAAI,EAAGA,EAAIlC,KAAKwE,WAAWrC,OAAQD,IAAK,CAC7C,IAAIkM,EAAWpO,KAAKwE,WAAWtC,GAC/B5B,EAAEN,KAAKqO,kBAAkBnM,IAAIK,KACzB4C,OAAOC,aAAa,GAAKlD,GAAK,KAAOlC,KAAKgB,aAAakB,IAE3D,IAAIoM,EAAQtO,KAAKa,WAAWuN,GAAU/N,GAClCL,KAAKc,YAAYyN,QAAQD,IAAU,EACnCtO,KAAKqO,kBAAkBnM,GAAGsM,UAAUC,IAChC,QACA,iBAGJzO,KAAKqO,kBAAkBnM,GAAGsM,UAAUC,IAChC,QACA,eAGZ,CACJ,CACA,gBAAAvK,GACIpE,MAAMoE,mBACNlE,KAAKqO,kBAAoB,GACzB,IAAK,IAAI1L,EAAI,EAAGA,EAAI3C,KAAKa,WAAWsB,OAAQQ,IAAK,CAC7C,IAAIkC,EAAI7E,KAAKwE,WAAW7B,GACpB+L,EAAepL,SAASC,cAAc,OAC1CmL,EAAarO,GAAKL,KAAKI,MAAQ,iBAAmByE,EAClD6J,EAAaF,UAAUC,IAAI,gBAC3BzO,KAAKqO,kBAAkB3L,KAAKgM,GAC5B1O,KAAK4D,SAASH,YAAYiL,EAC9B,CACJ,CACA,qBAAAC,GAYI,OAVI3O,KAAKsK,eAAiBtK,KAAKc,YAAYqB,QACvCnC,KAAKc,YAAYqB,SAAWnC,KAAKiJ,WAAW9G,OAE5CnC,KAAKY,SAAU,EACmB,IAA3BZ,KAAKiJ,WAAW9G,OACvBnC,KAAKY,SAAU,EAGfZ,KAAKY,QAAU,KAEXZ,KAAKY,SACT,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,QACI,OAAO,KAEnB,CACA,qBAAAgO,GAEI,OAAQ5O,KAAKY,SACT,KAAK,EACD,MAAO,IACX,KAAK,EACD,MAAO,IACX,QACI,OAAO,KAEnB,CACA,iBAAAiO,GACI,OAAI7O,KAAKG,gBACEH,KAAK2O,wBAEL3O,KAAK4O,uBAEpB,CACA,YAAAE,GACI,IAAK,IAAI5M,EAAI,EAAGA,EAAIlC,KAAKqO,kBAAkBlM,OAAQD,IAC/C5B,EAAEN,KAAKqO,kBAAkBnM,IAAI+L,MAErC,CAEA,qBAAAc,GACI,IAAIrK,EAAO1E,KACP2E,EAAa,WACbD,EAAKE,YAAa,CACtB,EACA,IAAK,IAAIoK,KAAOhP,KAAKsE,YACjB0K,EAAIzJ,MAAME,QAAUd,CAE5B,OAGoC,IAA7BuI,OAAO+B,oBACd/B,OAAO+B,kBAAoB,CAAC,GAGhC/B,OAAO+B,kBAAkBC,eAAiB,SAAUrP,GAChD,OAAIA,EAAKsP,MACE,IAAI/B,EAAQvN,GAEZ,IAAIF,EAAeE,EAElC,C","sources":["webpack://WebComponents/./runestone/mchoice/js/mchoice.js","webpack://WebComponents/./runestone/mchoice/js/timedmc.js"],"sourcesContent":["/*==========================================\n========      Master mchoice.js     =========\n============================================\n===  This file contains the JS for the   ===\n=== Runestone multiple choice component. ===\n============================================\n===              Created By              ===\n===           Isaiah Mayerchak           ===\n===                 and                  ===\n===             Kirby Olson              ===\n===                6/4/15                ===\n==========================================*/\n\nimport RunestoneBase from \"../../common/js/runestonebase.js\";\n//import \"./../styles/runestone-custom-sphinx-bootstrap.css\";\nimport \"../css/mchoice.css\";\n\n// MC constructor\nexport default class MultipleChoice extends RunestoneBase {\n    constructor(opts) {\n        super(opts);\n        opts = opts || {};\n        var orig = opts.orig; // entire <ul> element\n        this.origElem = orig;\n        this.useRunestoneServices = opts.useRunestoneServices;\n        this.multipleanswers = false;\n        this.divid = orig.id;\n        if ($(this.origElem).data(\"multipleanswers\") === true) {\n            this.multipleanswers = true;\n        }\n        this.children = this.origElem.childNodes;\n        this.random = false;\n        if ($(this.origElem).is(\"[data-random]\")) {\n            this.random = true;\n        }\n        this.correct = null;\n        this.answerList = [];\n        this.correctList = [];\n        this.correctIndexList = [];\n        this.feedbackList = [];\n        this.question = null;\n        this.caption = \"Multiple Choice\";\n        this.findAnswers();\n        this.findQuestion();\n        this.findFeedbacks();\n        this.createCorrectList();\n        this.createMCForm();\n        this.addCaption(\"runestone\");\n        this.checkServer(\"mChoice\", true);\n        // https://docs.mathjax.org/en/latest/options/startup/startup.html\n        // https://docs.mathjax.org/en/latest/web/configuration.html#startup-action\n        // runestoneMathReady is defined in the preamble for all PTX authored books\n        this.queueMathJax(this.containerDiv);\n        if (typeof Prism !== \"undefined\") {\n            Prism.highlightAllUnder(this.containerDiv);\n        }\n    }\n\n    /*====================================\n    ==== Functions parsing variables  ====\n    ====  out of intermediate HTML    ====\n    ====================================*/\n    findQuestion() {\n        // Old HTML format had question inside ul\n        // Newer format has a div.exercise-statement that is a part of the ul's parent\n        // Check for newer format...\n        const exStatement = this.origElem.parentElement.querySelector('.exercise-statement');\n        if (exStatement) {\n            this.question = exStatement;\n        } else {\n            //Older format\n            var delimiter;\n            for (var i = 0; i < this.origElem.childNodes.length; i++) {\n                if (this.origElem.childNodes[i].nodeName === \"LI\") {\n                    delimiter = this.origElem.childNodes[i].outerHTML;\n                    break;\n                }\n            }\n            var fulltext = $(this.origElem).html();\n            var temp = fulltext.split(delimiter);\n            this.question = temp[0];\n        }\n    }\n\n    findAnswers() {\n        // Creates answer objects and pushes them to answerList\n        // format: ID, Correct bool, Content (text)\n        var ChildAnswerList = [];\n        for (var i = 0; i < this.children.length; i++) {\n            if ($(this.children[i]).is(\"[data-component=answer]\")) {\n                ChildAnswerList.push(this.children[i]);\n            }\n        }\n        for (var j = 0; j < ChildAnswerList.length; j++) {\n            var answer_id = $(ChildAnswerList[j]).attr(\"id\");\n            var is_correct = false;\n            if ($(ChildAnswerList[j]).is(\"[data-correct]\")) {\n                // If data-correct attribute exists, answer is correct\n                is_correct = true;\n            }\n            var answer_text = $(ChildAnswerList[j]).html();\n            var answer_object = {\n                id: answer_id,\n                correct: is_correct,\n                content: answer_text,\n            };\n            this.answerList.push(answer_object);\n        }\n    }\n\n    findFeedbacks() {\n        for (var i = 0; i < this.children.length; i++) {\n            if ($(this.children[i]).is(\"[data-component=feedback]\")) {\n                this.feedbackList.push(this.children[i].innerHTML);\n            }\n        }\n    }\n\n    createCorrectList() {\n        // Creates array that holds the ID\"s of correct answers\n        // Also populates an array that holds the indeces of correct answers\n        for (var i = 0; i < this.answerList.length; i++) {\n            if (this.answerList[i].correct) {\n                this.correctList.push(this.answerList[i].id);\n                this.correctIndexList.push(i);\n            }\n        }\n    }\n\n    /*===========================================\n    ====   Functions generating final HTML   ====\n    ===========================================*/\n    createMCForm() {\n        this.renderMCContainer();\n        this.renderMCForm(); // renders the form with options and buttons\n        this.renderMCfeedbackDiv();\n        // replaces intermediate HTML with rendered HTML\n        $(this.origElem).replaceWith(this.containerDiv);\n    }\n\n    renderMCContainer() {\n        this.containerDiv = document.createElement(\"div\");\n        this.questionDiv = document.createElement(\"div\");\n        $(this.questionDiv).html(this.question);\n        this.questionDiv.id = this.divid + \"_prompt\";\n        this.containerDiv.appendChild(this.questionDiv);\n        $(this.containerDiv).addClass(this.origElem.getAttribute(\"class\"));\n        this.containerDiv.id = this.divid;\n    }\n\n    renderMCForm() {\n        this.optsForm = document.createElement(\"form\");\n        this.optsForm.id = this.divid + \"_form\";\n        $(this.optsForm).attr({\n            method: \"get\",\n            action: \"\",\n            onsubmit: \"return false;\",\n        });\n        // Add fieldset and legend for accessibility\n        this.optsFieldSet = document.createElement(\"fieldset\");\n        this.optsFieldSet.setAttribute(\"role\", \"radiogroup\");\n        this.optsFieldSet.setAttribute(\"aria-labelledby\", this.divid + \"_prompt\");\n        this.optsForm.appendChild(this.optsFieldSet);\n        // generate form options\n        this.renderMCFormOpts();\n        this.renderMCFormButtons();\n        // Append the form to the container\n        let legend = document.createElement(\"legend\");\n        if (this.multipleanswers) {\n            legend.textContent = \"Choose all that apply\";\n        } else {\n            legend.textContent = \"Choose one\";\n        }\n        this.optsFieldSet.appendChild(legend);\n        this.containerDiv.appendChild(this.optsForm);\n    }\n\n    renderMCFormOpts() {\n        // creates input DOM elements\n        this.optionArray = []; // array with an object for each option containing the input and label for that option\n        var input_type = \"radio\";\n        if (this.multipleanswers) {\n            input_type = \"checkbox\";\n        }\n        // this.indexArray is used to index through the answers\n        // it is just 0-n normally, but the order is shuffled if the random option is present\n        this.indexArray = [];\n        for (var i = 0; i < this.answerList.length; i++) {\n            this.indexArray.push(i);\n        }\n        if (this.random) {\n            this.randomizeAnswers();\n        }\n        let self = this;\n        let answerFunc = function () {\n            self.isAnswered = true;\n        };\n        for (var j = 0; j < this.answerList.length; j++) {\n            var k = this.indexArray[j];\n            var optid = this.divid + \"_opt_\" + k;\n            // Create the label for the input\n            var label = document.createElement(\"label\");\n            // If the content begins with a ``<p>``, put the label inside of it. (Sphinx 2.0 puts all content in a ``<p>``, while Sphinx 1.8 doesn't).\n            var content = this.answerList[k].content;\n            var prefix = \"\";\n            if (content.startsWith(\"<p>\")) {\n                prefix = \"<p>\";\n                content = content.slice(3);\n            }\n            $(label).html(\n                `${prefix}<input type=\"${input_type}\" name=\"group1\" value=${k} id=${optid}>${String.fromCharCode(\n                    \"A\".charCodeAt(0) + j\n                )}. ${content}`\n            );\n            // create the object to store in optionArray\n            var optObj = {\n                input: $(label).find(\"input\")[0],\n                label: label,\n            };\n            optObj.input.onclick = answerFunc;\n\n            this.optionArray.push(optObj);\n            // add the option to the form\n            this.optsFieldSet.appendChild(label);\n            this.optsFieldSet.appendChild(document.createElement(\"br\"));\n        }\n    }\n\n    renderMCFormButtons() {\n        // submit and compare me buttons\n        // Create submit button\n        this.submitButton = document.createElement(\"button\");\n        this.submitButton.textContent = \"Check Me\";\n        $(this.submitButton).attr({\n            class: \"btn btn-success\",\n            name: \"do answer\",\n            type: \"button\",\n        });\n        if (this.multipleanswers) {\n            this.submitButton.addEventListener(\n                \"click\",\n                function () {\n                    this.processMCMASubmission(true);\n                }.bind(this),\n                false\n            );\n        } else {\n            this.submitButton.addEventListener(\n                \"click\",\n                function (ev) {\n                    ev.preventDefault();\n                    this.processMCMFSubmission(true);\n                }.bind(this),\n                false\n            );\n        } // end else\n        this.optsForm.appendChild(this.submitButton);\n        // Create compare button\n        if (this.useRunestoneServices && !eBookConfig.peer) {\n            this.compareButton = document.createElement(\"button\");\n            $(this.compareButton).attr({\n                class: \"btn btn-default\",\n                id: this.divid + \"_bcomp\",\n                disabled: \"\",\n                name: \"compare\",\n            });\n            this.compareButton.textContent = \"Compare me\";\n            this.compareButton.addEventListener(\n                \"click\",\n                function () {\n                    this.compareAnswers(this.divid);\n                }.bind(this),\n                false\n            );\n            this.optsForm.appendChild(this.compareButton);\n        }\n    }\n\n    renderMCfeedbackDiv() {\n        this.feedBackDiv = document.createElement(\"div\");\n        this.feedBackDiv.id = this.divid + \"_feedback\";\n        this.feedBackDiv.setAttribute(\"aria-live\", \"polite\");\n        this.feedBackDiv.setAttribute(\"role\", \"status\");\n        this.containerDiv.appendChild(document.createElement(\"br\"));\n        this.containerDiv.appendChild(this.feedBackDiv);\n    }\n\n    randomizeAnswers() {\n        // Makes the ordering of the answer choices random\n        var currentIndex = this.indexArray.length,\n            temporaryValue,\n            randomIndex;\n        // While there remain elements to shuffle...\n        while (currentIndex !== 0) {\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            // And swap it with the current element.\n            temporaryValue = this.indexArray[currentIndex];\n            this.indexArray[currentIndex] = this.indexArray[randomIndex];\n            this.indexArray[randomIndex] = temporaryValue;\n            var temporaryFeedback = this.feedbackList[currentIndex];\n            this.feedbackList[currentIndex] = this.feedbackList[randomIndex];\n            this.feedbackList[randomIndex] = temporaryFeedback;\n        }\n    }\n\n    /*===================================\n    === Checking/loading from storage ===\n    ===================================*/\n    restoreAnswers(data) {\n        // Restore answers from storage retrieval done in RunestoneBase\n        // sometimes data.answer can be null\n        if (!data.answer) {\n            data.answer = \"\";\n        }\n        var answers = data.answer.split(\",\");\n        for (var a = 0; a < answers.length; a++) {\n            var index = answers[a];\n            for (var b = 0; b < this.optionArray.length; b++) {\n                if (this.optionArray[b].input.value == index) {\n                    $(this.optionArray[b].input).attr(\"checked\", \"true\");\n                }\n            }\n        }\n        if (this.multipleanswers) {\n            this.processMCMASubmission(false);\n        } else {\n            this.processMCMFSubmission(false);\n        }\n    }\n\n    checkLocalStorage() {\n        // Repopulates MCMA questions with a user's previous answers,\n        // which were stored into local storage.\n        var storedData;\n        var answers;\n        if (this.graderactive) {\n            return;\n        }\n        var len = localStorage.length;\n        if (len > 0) {\n            var ex = localStorage.getItem(this.localStorageKey());\n            if (ex !== null) {\n                try {\n                    storedData = JSON.parse(ex);\n                    answers = storedData.answer.split(\",\");\n                } catch (err) {\n                    // error while parsing; likely due to bad value stored in storage\n                    console.log(err.message);\n                    localStorage.removeItem(this.localStorageKey());\n                    return;\n                }\n                for (var a = 0; a < answers.length; a++) {\n                    var index = answers[a];\n                    for (var b = 0; b < this.optionArray.length; b++) {\n                        if (this.optionArray[b].input.value == index) {\n                            $(this.optionArray[b].input).attr(\n                                \"checked\",\n                                \"true\"\n                            );\n                        }\n                    }\n                }\n                if (this.useRunestoneServices) {\n                    this.enableMCComparison();\n                    this.getSubmittedOpts(); // to populate givenlog for logging\n                    if (this.multipleanswers) {\n                        this.logMCMAsubmission();\n                    } else {\n                        this.logMCMFsubmission();\n                    }\n                }\n            }\n        }\n    }\n\n    setLocalStorage(data) {\n        var timeStamp = new Date();\n        var storageObj = {\n            answer: data.answer,\n            timestamp: timeStamp,\n            correct: data.correct,\n        };\n        localStorage.setItem(\n            this.localStorageKey(),\n            JSON.stringify(storageObj)\n        );\n    }\n\n    /*===============================\n    === Processing MC Submissions ===\n    ===============================*/\n    processMCMASubmission(logFlag) {\n        // Called when the submit button is clicked\n        this.getSubmittedOpts(); // make sure this.givenArray is populated\n        this.scoreMCMASubmission();\n        this.setLocalStorage({\n            correct: this.correct ? \"T\" : \"F\",\n            answer: this.givenArray.join(\",\"),\n        });\n        if (logFlag) {\n            this.logMCMAsubmission();\n        }\n        if (!eBookConfig.peer || eBookConfig.isInstructor) {\n            this.renderMCMAFeedBack();\n            if (this.useRunestoneServices) {\n                this.enableMCComparison();\n            }\n        } else {\n            // acknowledge submission\n            if (eBookConfig.peer &&\n                eBookConfig.peerMode === \"async\" &&\n                typeof studentVoteCount !== \"undefined\" &&\n                studentVoteCount > 1) {\n                this.renderMCMAFeedBack();\n            } else {\n                $(this.feedBackDiv).html(\"<p>Your Answer has been recorded</p>\");\n                $(this.feedBackDiv).attr(\"class\", \"alert alert-info\");\n            }\n        }\n    }\n\n    getSubmittedOpts() {\n        var given;\n        this.singlefeedback = \"\"; // Used for MCMF questions\n        this.feedbackString = \"\"; // Used for MCMA questions\n        this.givenArray = [];\n        this.givenlog = \"\";\n        var buttonObjs = this.optsForm.elements.group1;\n        for (var i = 0; i < buttonObjs.length; i++) {\n            if (buttonObjs[i].checked) {\n                given = buttonObjs[i].value;\n                this.givenArray.push(given);\n                this.feedbackString += `<li value=\"${i + 1}\">${this.feedbackList[i]\n                    }</li>`;\n                this.givenlog += given + \",\";\n                this.singlefeedback = this.feedbackList[i];\n            }\n        }\n        this.givenArray.sort();\n    }\n\n    checkCurrentAnswer() {\n        this.getSubmittedOpts();\n        if (this.multipleanswers) {\n            this.scoreMCMASubmission();\n        } else {\n            this.scoreMCMFSubmission();\n        }\n    }\n\n    async logCurrentAnswer(sid) {\n        if (this.multipleanswers) {\n            await this.logMCMAsubmission(sid);\n        } else {\n            await this.logMCMFsubmission(sid);\n        }\n    }\n\n    renderFeedback() {\n        if (this.multipleanswers) {\n            this.renderMCMAFeedBack();\n        } else {\n            this.renderMCMFFeedback();\n        }\n        this.queueMathJax(this.feedBackDiv);\n    }\n    scoreMCMASubmission() {\n        this.correctCount = 0;\n        var correctIndex = 0;\n        var givenIndex = 0;\n        while (\n            correctIndex < this.correctIndexList.length &&\n            givenIndex < this.givenArray.length\n        ) {\n            if (\n                this.givenArray[givenIndex] <\n                this.correctIndexList[correctIndex]\n            ) {\n                givenIndex++;\n            } else if (\n                this.givenArray[givenIndex] ==\n                this.correctIndexList[correctIndex]\n            ) {\n                this.correctCount++;\n                givenIndex++;\n                correctIndex++;\n            } else {\n                correctIndex++;\n            }\n        }\n        var numGiven = this.givenArray.length;\n        var numCorrect = this.correctCount;\n        var numNeeded = this.correctList.length;\n        this.answer = this.givenArray.join(\",\");\n        this.correct = numCorrect === numNeeded && numNeeded === numGiven;\n        if (numGiven === numNeeded) {\n            this.percent = numCorrect / numNeeded;\n        } else {\n            this.percent = numCorrect / Math.max(numGiven, numNeeded);\n        }\n    }\n\n    async logMCMAsubmission(sid) {\n        var answer = this.answer || \"\";\n        var correct = this.correct || false;\n        var logAnswer =\n            \"answer:\" + answer + \":\" + (correct == true ? \"correct\" : \"no\");\n        let data = {\n            event: \"mChoice\",\n            act: logAnswer,\n            answer: answer,\n            correct: correct,\n            div_id: this.divid,\n        };\n        if (eBookConfig.peer && typeof studentVoteCount !== \"undefined\") {\n            data.act = data.act + `:vote${studentVoteCount}`;\n        }\n        if (typeof sid !== \"undefined\") {\n            data.sid = sid;\n        }\n        await this.logBookEvent(data);\n    }\n\n    renderMCMAFeedBack() {\n        var answerStr = \"answers\";\n        var numGiven = this.givenArray.length;\n        if (numGiven === 1) {\n            answerStr = \"answer\";\n        }\n        var numCorrect = this.correctCount;\n        var numNeeded = this.correctList.length;\n        var feedbackText = this.feedbackString;\n        if (this.correct) {\n            $(this.feedBackDiv).html(`✔️ <ol type=\"A\">${feedbackText}</ul>`);\n            $(this.feedBackDiv).attr(\"class\", \"alert alert-info\");\n        } else {\n            $(this.feedBackDiv).html(\n                `✖️ You gave ${numGiven} ${answerStr} and got ${numCorrect} correct of ${numNeeded} needed.<ol type=\"A\">${feedbackText}</ul>`\n            );\n            $(this.feedBackDiv).attr(\"class\", \"alert alert-danger\");\n        }\n    }\n\n    processMCMFSubmission(logFlag) {\n        // Called when the submit button is clicked\n        this.getSubmittedOpts(); // make sure this.givenArray is populated\n        this.scoreMCMFSubmission();\n        this.setLocalStorage({\n            correct: this.correct ? \"T\" : \"F\",\n            answer: this.givenArray.join(\",\"),\n        });\n        if (logFlag) {\n            this.logMCMFsubmission();\n        }\n        if (!eBookConfig.peer || eBookConfig.isInstructor) {\n            this.renderMCMFFeedback();\n            if (this.useRunestoneServices) {\n                this.enableMCComparison();\n            }\n        } else {\n            if (eBookConfig.peer &&\n                eBookConfig.peerMode === \"async\" &&\n                typeof studentVoteCount !== \"undefined\" &&\n                studentVoteCount > 1) {\n                this.renderMCMAFeedBack();\n            } else {\n                $(this.feedBackDiv).html(\"<p>Your Answer has been recorded</p>\");\n                $(this.feedBackDiv).attr(\"class\", \"alert alert-info\");\n            }\n        }\n    }\n\n    scoreMCMFSubmission() {\n        this.answer = this.givenArray[0];\n        if (this.givenArray[0] == this.correctIndexList[0]) {\n            this.correct = true;\n            this.percent = 1.0;\n        } else if (this.givenArray[0] != null) {\n            // if given is null then the question wasn\"t answered and should be counted as skipped\n            this.correct = false;\n            this.percent = 0.0;\n        }\n    }\n\n    async logMCMFsubmission(sid) {\n        // If there's no answer provided (the array is empty), use a blank for the answer.\n        var answer = this.givenArray[0] || \"\";\n        var correct =\n            this.givenArray[0] == this.correctIndexList[0] ? \"T\" : \"F\";\n        var logAnswer =\n            \"answer:\" + answer + \":\" + (correct == \"T\" ? \"correct\" : \"no\"); // backward compatible\n        let data = {\n            event: \"mChoice\",\n            act: logAnswer,\n            answer: answer,\n            correct: correct,\n            div_id: this.divid,\n        };\n        if (eBookConfig.peer && typeof studentVoteCount !== \"undefined\") {\n            data.act = data.act + `:vote${studentVoteCount}`;\n        }\n        if (typeof sid !== \"undefined\") {\n            data.sid = sid;\n        }\n        await this.logBookEvent(data);\n    }\n\n    renderMCMFFeedback() {\n        let correct = this.givenArray[0] == this.correctIndexList[0];\n        let feedbackText = this.singlefeedback;\n\n        if (correct) {\n            $(this.feedBackDiv).html(\"✔️ \" + feedbackText);\n            $(this.feedBackDiv).attr(\"class\", \"alert alert-info\"); // use blue for better red/green blue color blindness\n        } else {\n            if (feedbackText == null) {\n                feedbackText = \"\";\n            }\n            $(this.feedBackDiv).html(\"✖️ \" + feedbackText);\n            $(this.feedBackDiv).attr(\"class\", \"alert alert-danger\");\n        }\n    }\n    enableMCComparison() {\n        if (eBookConfig.enableCompareMe) {\n            this.compareButton.disabled = false;\n        }\n    }\n    instructorMchoiceModal(data) {\n        // data.reslist -- student and their answers\n        // data.answerDict    -- answers and count\n        // data.correct - correct answer\n        var res = \"<table><tr><th>Student</th><th>Answer(s)</th></tr>\";\n        for (var i in data) {\n            res +=\n                \"<tr><td>\" +\n                data[i][0] +\n                \"</td><td>\" +\n                data[i][1] +\n                \"</td></tr>\";\n        }\n        res += \"</table>\";\n        return res;\n    }\n    compareModal(data, status, whatever) {\n        var datadict = data.detail;\n        var answers = datadict.answerDict;\n        var misc = datadict.misc;\n        var kl = Object.keys(answers).sort();\n        var body = \"<table>\";\n        body += \"<tr><th>Answer</th><th>Percent</th></tr>\";\n        var theClass = \"\";\n        for (var k in kl) {\n            if (kl[k] === misc.correct) {\n                theClass = \"success\";\n            } else {\n                theClass = \"info\";\n            }\n            body +=\n                \"<tr><td>\" + kl[k] + \"</td><td class='compare-me-progress'>\";\n            var pct = answers[kl[k]] + \"%\";\n            body += \"<div class='progress'>\";\n            body +=\n                \"    <div class='progress-bar progress-bar-\" +\n                theClass +\n                \"' style='width:\" +\n                pct +\n                \";'>\" +\n                pct;\n            body += \"    </div>\";\n            body += \"</div></td></tr>\";\n        }\n        body += \"</table>\";\n        if (misc.yourpct !== \"unavailable\") {\n            body +=\n                \"<br /><p>You have \" +\n                misc.yourpct +\n                \"% correct for all questions</p>\";\n        }\n        if (datadict.reslist !== undefined) {\n            body += this.instructorMchoiceModal(datadict.reslist);\n        }\n        var html =\n            \"<div class='modal fade'>\" +\n            \"    <div class='modal-dialog compare-modal'>\" +\n            \"        <div class='modal-content'>\" +\n            \"            <div class='modal-header'>\" +\n            \"                <button type='button' class='close' data-dismiss='modal' aria-hidden='true'>&times;</button>\" +\n            \"                <h4 class='modal-title'>Distribution of Answers</h4>\" +\n            \"            </div>\" +\n            \"            <div class='modal-body'>\" +\n            body +\n            \"            </div>\" +\n            \"        </div>\" +\n            \"    </div>\" +\n            \"</div>\";\n        var el = $(html);\n        el.modal();\n    }\n    // _`compareAnswers`\n    compareAnswers() {\n        var data = {};\n        data.div_id = this.divid;\n        data.course_name = eBookConfig.course;\n        jQuery.get(\n            `${eBookConfig.new_server_prefix}/assessment/getaggregateresults`,\n            data,\n            this.compareModal.bind(this)\n        );\n    }\n\n    disableInteraction() {\n        for (var i = 0; i < this.optionArray.length; i++) {\n            this.optionArray[i].input.disabled = true;\n        }\n    }\n\n    enableInteraction() {\n        for (var i = 0; i < this.optionArray.length; i++) {\n            this.optionArray[i].input.disabled = false;\n        }\n    }\n}\n\n/*=================================\n== Find the custom HTML tags and ==\n==   execute our code on them    ==\n=================================*/\n$(document).on(\"runestone:login-complete\", function () {\n    $(\"[data-component=multiplechoice]\").each(function (index) {\n        // MC\n        var opts = {\n            orig: this,\n            useRunestoneServices: eBookConfig.useRunestoneServices,\n        };\n        if ($(this).closest(\"[data-component=timedAssessment]\").length == 0) {\n            // If this element exists within a timed component, don't render it here\n            window.componentMap[this.id] = new MultipleChoice(opts);\n        }\n    });\n});\n","import MultipleChoice from \"./mchoice.js\";\n\nexport default class TimedMC extends MultipleChoice {\n    constructor(opts) {\n        super(opts);\n        $(this.containerDiv).addClass(\"runestone\");\n        this.needsReinitialization = true;\n        this.renderTimedIcon(this.MCContainer);\n        this.hideButtons(); // Don't show per-question buttons in a timed assessment\n    }\n\n    renderTimedIcon(component) {\n        // renders the clock icon on timed components.    The component parameter\n        // is the element that the icon should be appended to.\n        var timeIconDiv = document.createElement(\"div\");\n        var timeIcon = document.createElement(\"img\");\n        $(timeIcon).attr({\n            src: \"../_static/clock.png\",\n            style: \"width:15px;height:15px\",\n        });\n        timeIconDiv.className = \"timeTip\";\n        timeIconDiv.title = \"\";\n        timeIconDiv.appendChild(timeIcon);\n        $(component).prepend(timeIconDiv);\n    }\n    hideButtons() {\n        //Just hiding the buttons doesn't prevent submitting the form when entering is clicked\n        //We need to completely disable the buttons\n        $(this.submitButton).attr(\"disabled\", \"true\");\n        $(this.submitButton).hide();\n        $(this.compareButton).hide();\n    }\n\n    // These methods override the methods in the base class. Called from renderFeedback()\n    //\n    renderMCMAFeedBack() {\n        this.feedbackTimedMC();\n    }\n    renderMCMFFeedback(whatever, whateverr) {\n        this.feedbackTimedMC();\n    }\n    feedbackTimedMC() {\n        for (var i = 0; i < this.indexArray.length; i++) {\n            var tmpindex = this.indexArray[i];\n            $(this.feedBackEachArray[i]).html(\n                String.fromCharCode(65 + i) + \". \" + this.feedbackList[i]\n            );\n            var tmpid = this.answerList[tmpindex].id;\n            if (this.correctList.indexOf(tmpid) >= 0) {\n                this.feedBackEachArray[i].classList.add(\n                    \"alert\",\n                    \"alert-success\"\n                );\n            } else {\n                this.feedBackEachArray[i].classList.add(\n                    \"alert\",\n                    \"alert-danger\"\n                );\n            }\n        }\n    }\n    renderMCFormOpts() {\n        super.renderMCFormOpts();\n        this.feedBackEachArray = [];\n        for (var j = 0; j < this.answerList.length; j++) {\n            var k = this.indexArray[j];\n            var feedBackEach = document.createElement(\"div\");\n            feedBackEach.id = this.divid + \"_eachFeedback_\" + k;\n            feedBackEach.classList.add(\"eachFeedback\");\n            this.feedBackEachArray.push(feedBackEach);\n            this.optsForm.appendChild(feedBackEach);\n        }\n    }\n    checkCorrectTimedMCMA() {\n        if (\n            this.correctCount === this.correctList.length &&\n            this.correctList.length === this.givenArray.length\n        ) {\n            this.correct = true;\n        } else if (this.givenArray.length !== 0) {\n            this.correct = false;\n        } else {\n            // question was skipped\n            this.correct = null;\n        }\n        switch (this.correct) {\n            case true:\n                return \"T\";\n            case false:\n                return \"F\";\n            default:\n                return null;\n        }\n    }\n    checkCorrectTimedMCMF() {\n        // Returns if the question was correct, incorrect, or skipped (return null in the last case)\n        switch (this.correct) {\n            case true:\n                return \"T\";\n            case false:\n                return \"F\";\n            default:\n                return null;\n        }\n    }\n    checkCorrectTimed() {\n        if (this.multipleanswers) {\n            return this.checkCorrectTimedMCMA();\n        } else {\n            return this.checkCorrectTimedMCMF();\n        }\n    }\n    hideFeedback() {\n        for (var i = 0; i < this.feedBackEachArray.length; i++) {\n            $(this.feedBackEachArray[i]).hide();\n        }\n    }\n\n    reinitializeListeners() {\n        let self = this;\n        let answerFunc = function () {\n            self.isAnswered = true;\n        };\n        for (let opt of this.optionArray) {\n            opt.input.onclick = answerFunc;\n        }\n    }\n}\n\nif (typeof window.component_factory === \"undefined\") {\n    window.component_factory = {};\n}\n\nwindow.component_factory.multiplechoice = function (opts) {\n    if (opts.timed) {\n        return new TimedMC(opts);\n    } else {\n        return new MultipleChoice(opts);\n    }\n};\n"],"names":["MultipleChoice","constructor","opts","super","orig","this","origElem","useRunestoneServices","multipleanswers","divid","id","$","data","children","childNodes","random","is","correct","answerList","correctList","correctIndexList","feedbackList","question","caption","findAnswers","findQuestion","findFeedbacks","createCorrectList","createMCForm","addCaption","checkServer","queueMathJax","containerDiv","Prism","highlightAllUnder","exStatement","parentElement","querySelector","delimiter","i","length","nodeName","outerHTML","temp","html","split","ChildAnswerList","push","j","answer_id","attr","is_correct","answer_object","content","innerHTML","renderMCContainer","renderMCForm","renderMCfeedbackDiv","replaceWith","document","createElement","questionDiv","appendChild","addClass","getAttribute","optsForm","method","action","onsubmit","optsFieldSet","setAttribute","renderMCFormOpts","renderMCFormButtons","legend","textContent","optionArray","input_type","indexArray","randomizeAnswers","self","answerFunc","isAnswered","k","optid","label","prefix","startsWith","slice","String","fromCharCode","charCodeAt","optObj","input","find","onclick","submitButton","class","name","type","addEventListener","processMCMASubmission","bind","ev","preventDefault","processMCMFSubmission","eBookConfig","peer","compareButton","disabled","compareAnswers","feedBackDiv","temporaryValue","randomIndex","currentIndex","Math","floor","temporaryFeedback","restoreAnswers","answer","answers","a","index","b","value","checkLocalStorage","graderactive","localStorage","ex","getItem","localStorageKey","JSON","parse","err","console","log","message","removeItem","enableMCComparison","getSubmittedOpts","logMCMAsubmission","logMCMFsubmission","setLocalStorage","timeStamp","Date","storageObj","timestamp","setItem","stringify","logFlag","scoreMCMASubmission","givenArray","join","isInstructor","renderMCMAFeedBack","peerMode","studentVoteCount","given","singlefeedback","feedbackString","givenlog","buttonObjs","elements","group1","checked","sort","checkCurrentAnswer","scoreMCMFSubmission","logCurrentAnswer","sid","renderFeedback","renderMCMFFeedback","correctCount","correctIndex","givenIndex","numGiven","numCorrect","numNeeded","percent","max","event","act","div_id","logBookEvent","answerStr","feedbackText","enableCompareMe","instructorMchoiceModal","res","compareModal","status","whatever","datadict","detail","answerDict","misc","kl","Object","keys","body","theClass","pct","yourpct","undefined","reslist","modal","course_name","course","jQuery","get","new_server_prefix","disableInteraction","enableInteraction","on","each","closest","window","componentMap","TimedMC","needsReinitialization","renderTimedIcon","MCContainer","hideButtons","component","timeIconDiv","timeIcon","src","style","className","title","prepend","hide","feedbackTimedMC","whateverr","tmpindex","feedBackEachArray","tmpid","indexOf","classList","add","feedBackEach","checkCorrectTimedMCMA","checkCorrectTimedMCMF","checkCorrectTimed","hideFeedback","reinitializeListeners","opt","component_factory","multiplechoice","timed"],"sourceRoot":""}