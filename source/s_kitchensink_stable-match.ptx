<section xml:id="s_kitchensink_stable-match">
    <title>The Stable Matching Theorem</title>
    <p>Now we present a light hearted optimization problem with a quite clever solution, called the <em>Stable Matching Theorem</em>.  There are <m>n</m> eligible men <m>b_1</m>, <m>b_2,\dots,b_n</m> and <m>n</m> eligible women <m>g_1</m>, <m>g_2,\dots,g_n</m>. (The theorem dates back many years, hence the heteronormative statement.) We will arrange <m>n</m> marriages, each involving one man and one woman. In the process, we will try to make everyone happy<mdash />or at least we will try to keep things stable.
        </p>

        <p>Each woman linearly orders the men in the order of her preference, <ie />, for each <m>i=1,2,\dots,n</m>, there is a permutation <m>\sigma_i</m> of <m>[n]</m> so that if <m>g_i</m> prefers <m>b_j</m> to <m>b_k</m>, then <m>\sigma_i(j)\gt  \sigma_i(k)</m>. Different women may have quite different preference orders. Also, each man linearly orders the women in order of his preference, <ie />, for each <m>i=1,2,\dots,n</m>, there is a permutation <m>\tau_i</m> of <m>[n]</m> so that if <m>b_i</m> prefers <m>g_j</m> to <m>g_k</m>, then <m>\tau_i(j)\gt\tau_i(k)</m>.
        </p>

        <p>A <m>1</m><ndash /><m>1</m> matching of the <m>n</m> men to the <m>n</m> women is <term>stable</term><idx><h>matching</h><h>stable</h></idx> if there do not exist two men <m>b</m> and <m>b'</m> and two women <m>g</m> and <m>g'</m> so that
        <ol>
            <li><m>b</m> is matched to <m>g</m>;</li>
            <li><m>b</m> prefers <m>g'</m> to <m>g</m>; and</li>
            <li><m>g</m> prefers <m>b'</m> to <m>b</m>.</li>
        </ol>
        The idea is that given these preferences, <m>b</m> and <m>g</m> may be mutually inclined to dissolve their relationship and initiate dalliances with other partners.
        </p>

        <p>So the question is whether, regardless of their respective preferences, we can always generate a stable matching. The answer is yes and there is a quite clever argument. In fact, it is one that yields a quite efficient algorithm.  At Stage<nbsp />1, all men go knock on the front door of the woman which is tops on their list. It may happen that some women have more than one caller while others have none. However, if a woman has one or more men at her door, she reaches out and grabs the one among the group which she prefers most by the collar and tells the others, if there are any, to go away. Any man rejected at this step proceeds to the front door of the woman who is second on their list. Again, a woman with one or more suitors at her door chooses the best among then and sends the others away. This process continues until eventually, each woman is holding onto exactly one man.
        </p>

        <p>It is interesting to note that each woman's prospects improve over time, <ie />, once she has a suitor, things only get better. Conversely, each man's prospects deteriorate over time. Regardless, we assert that the resulting matching is stable. To see this, suppose that it is unstable and choose men <m>b</m> and <m>b'</m>, women <m>g</m> and <m>g'</m> so that <m>b</m> is matched to <m>g</m>, but <m>b</m> prefers <m>g'</m> to <m>g</m> while <m>g</m> prefers <m>b'</m> to <m>b</m>. The algorithm requires that man <m>b</m> start at the top of his list and work his way down. Since he eventually lands on <m>g</m>'s door step, and he prefers <m>g'</m> to <m>g</m>, it implies that once upon a time, he was actually at <m>g'</m>'s door, and she sent him away. This means that at that exact moment, she had a man in hand that she prefers to <m>b</m>. Since her holdings only improve with time, it means that when the matching is finalized, woman <m>g</m> has a mate <m>b</m> that she prefers to <m>b'</m>.
        </p>

</section>
