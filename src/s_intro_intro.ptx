

<section permid="sPR" xml:id="s_intro_intro">
  <title>Introduction</title>
  <p permid="pVl">
    There are three principal themes to our course:
    <dl permid="YXa">
      <li permid="Fej">
        <title>Discrete Structures</title>
        <p permid="xzK">
          Graphs, digraphs, networks, designs, posets, 
          strings, patterns, distributions,
          coverings, and partitions.
        </p>
      </li>

      <li permid="lls">
        <title>Enumeration</title>
        <p permid="dGT">
          Permutations, combinations, inclusion/exclusion,
          generating functions, recurrence relations, and P&#xf3;lya counting.
        </p>
      </li>

      <li permid="RsB">
        <title>Algorithms and Optimization</title>
        <p permid="JOc">
          Sorting, eulerian circuits, hamiltonian cycles,
          planarity testing, graph coloring,
          spanning trees, shortest paths,
          network flows, bipartite matchings, and chain partitions.
        </p>
      </li>
    </dl>
  </p>

  <p permid="Wcu">
    To illustrate the accessible,
    concrete nature of combinatorics and to motivate topics that we will study,
    this preliminary chapter provides a first look at combinatorial problems,
    choosing examples from enumeration, graph theory,
    number theory, and optimization.
    The discussion is very informal<mdash />but this should serve to explain why we have to be more precise at later stages.
    We ask lots of questions,
    but at this stage, you'll only be able to answer a few.
    Later, you'll be able to answer many more <ellipsis /> but as promised earlier,
    most likely you'll never be able to answer them all.
    And if we're wrong in making that statement,
    then you're certain to become <em>very</em> famous.
    Also, you'll get an A<m>++</m> in the course and maybe even a Ph.D. too.
  </p>
</section>

